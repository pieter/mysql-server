#
# This test is for the consistent snapshot online backup driver
# The test is designed to show that a consistent snapshot
# backup can be taken while data is being inserted and deleted.
#
# TODO
#  - Make the test run the insert statements in parallel with the backup
#    command using --send and --reap and signals from backup code.
#

--source include/have_innodb.inc
--source include/have_debug.inc

--disable_warnings
DROP DATABASE IF EXISTS bup_snapshot;
--enable_warnings

CREATE DATABASE bup_snapshot;

connect (con1,localhost,root,,);
connect (con2,localhost,root,,);

connection con1;

# Create a table and load it with lots of data.

CREATE TABLE bup_snapshot.t1 (word CHAR(20)) ENGINE=INNODB;

INSERT INTO bup_snapshot.t1 VALUES ("01 Some data to test");
INSERT INTO bup_snapshot.t1 VALUES ("02 Some data to test");
INSERT INTO bup_snapshot.t1 VALUES ("03 Some data to test");
INSERT INTO bup_snapshot.t1 VALUES ("04 Some data to test");
INSERT INTO bup_snapshot.t1 VALUES ("05 Some data to test");
INSERT INTO bup_snapshot.t1 VALUES ("06 Some data to test");
INSERT INTO bup_snapshot.t1 VALUES ("07 Some data to test");
INSERT INTO bup_snapshot.t1 VALUES ("08 Some data to test");
INSERT INTO bup_snapshot.t1 VALUES ("09 Some data to test");
INSERT INTO bup_snapshot.t1 VALUES ("10 Some data to test");

--echo con1: Show that the new data doesn't exist before backup.
SELECT * FROM bup_snapshot.t1 WHERE word LIKE '-%';
SELECT COUNT(*) FROM bup_snapshot.t1;

# While a consistent snapshot backup is executed,
# no external inserts should be visible to the transaction.

--echo con1: Backing up database.
BACKUP DATABASE bup_snapshot TO "bup_snapshot.bak";

connection con2;

--echo con2: Inserting new data.
INSERT INTO bup_snapshot.t1 VALUES("- Dave Mathews");
INSERT INTO bup_snapshot.t1 VALUES("- Yes");
INSERT INTO bup_snapshot.t1 VALUES("- Jethro Tull");
DELETE FROM bup_snapshot.t1 WHERE word LIKE '10%';

--echo con2: Showing the data after inserts.
SELECT * FROM bup_snapshot.t1 WHERE word LIKE '-%';
SELECT COUNT(*) FROM bup_snapshot.t1;

connection con1;

# Now restore the database and then check to make sure the new rows
# were not backed up.

--echo con1: Dropping the database
DROP TABLE bup_snapshot.t1;

--echo con1: Restoring the database
RESTORE FROM "bup_snapshot.bak";

--echo con1: Showing the data (no new data should be here).
SELECT * FROM bup_snapshot.t1 WHERE word LIKE '-%';
SELECT COUNT(*) FROM bup_snapshot.t1;

--disable_warnings
DROP DATABASE IF EXISTS bup_snapshot;
--enable_warnings

--exec rm $MYSQLTEST_VARDIR/master-data/bup_snapshot.bak


