--source include/not_embedded.inc

# Check that BACKUP/RESTORE commands correctly report errors 
#
# TODO: When we know how to do that, check that the backup progress table
# contains appropriate rows when errors have been detected.

--disable_warnings
DROP DATABASE IF EXISTS adb;
DROP DATABASE IF EXISTS bdb;
--error 0,1
--remove_file $MYSQLTEST_VARDIR/master-data/test.bak
--enable_warnings

# non-existent backup archive
-- error ER_BACKUP_READ_LOC
RESTORE FROM 'test.bak';

CREATE DATABASE adb;
CREATE DATABASE bdb;
CREATE TABLE bdb.t1(a int) ENGINE=MEMORY;

# invalid location
--error ER_BACKUP_INVALID_LOC
BACKUP DATABASE adb TO '';

# don't overwrite existing files
--error ER_BACKUP_WRITE_LOC
BACKUP DATABASE adb TO "bdb/t1.frm";

--replace_column 1 #
BACKUP DATABASE adb TO "test.bak";

# don't overwrite existing backup image
--error ER_BACKUP_WRITE_LOC
BACKUP DATABASE adb TO "test.bak";

--remove_file $MYSQLTEST_VARDIR/master-data/test.bak

# non-existent database
--disable_warnings
DROP DATABASE IF EXISTS foo;
DROP DATABASE IF EXISTS bar;
--enable_warnings

-- error ER_BAD_DB_ERROR
BACKUP DATABASE foo TO 'test.bak';
-- error ER_BAD_DB_ERROR
BACKUP DATABASE test,foo,bdb,bar TO 'test.bak';

# Test that BACKUP/RESTORE statements are disable inside stored routines,
# triggers and events.

use adb;

create table t1 (a int);

--error ER_SP_BADSTATEMENT
create procedure p1() backup database test to 'test.bak';
--error ER_SP_BADSTATEMENT
create procedure p1() restore from 'test.bak';

--error ER_SP_BADSTATEMENT
create function f1() returns int backup database test to 'test.bak';
--error ER_SP_BADSTATEMENT
create function f1() returns int restore from 'test.bak';

--error ER_SP_BADSTATEMENT
create trigger tr1 before insert on t1 
for each row backup database test to 'test.bak';
--error ER_SP_BADSTATEMENT
create trigger tr1 before insert on t1 
for each row restore from 'test.bak';

--error ER_SP_BADSTATEMENT
create event ev1 on schedule every 1 day 
do backup database test to 'test.bak';
--error ER_SP_BADSTATEMENT
create event ev1 on schedule every 1 day 
do restore from 'test.bak';

# TODO: fix error injection and test more errors

DROP DATABASE adb;
DROP DATABASE bdb;

# Note: the file should be removed - if it is not, the following command
# will fail and we will be warned that something is wrong with the test
--error 1
--remove_file $MYSQLTEST_VARDIR/master-data/test.bak
