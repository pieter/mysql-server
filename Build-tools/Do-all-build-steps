#!/bin/sh

WD=`pwd`
# Don't write a wrong path for BD !!!!!
if [ -w /my/tmp ]
then
  BD=/my/tmp/BUILD
elif [ -n "$TMPDIR" ]
then
  BD=$TMPDIR/BUILD
else
  BD=/tmp/BUILD
fi
TMP_SCRIPT=$WD/Logs/00-temp-for-do-all-build-steps.$$

# We build on work
to_host=`hostname`
cc=gcc
ccc=gcc
EXTRA_CONFIG="--without-perl"
#AM_MAKEFLAGS="-j 2"
echo "Building on $to_host"

rm -rf $BD/*
rm -f $WD/binary/*
mkdir -p $WD/binary
mkdir -p $WD/Logs
mkdir -p $BD/Logs

cat > $TMP_SCRIPT <<END
# Show executed commands
set -x
# Move to the right place
cd "$WD"
# Create a build directory tree
bk export $BD
cd "$BD"
chmod -R u+rw,g+rw .

# Make it easy to remove an old build
umask 002

CC=$cc CXX=$ccc 
export CC CXX

gmake -j 2 -k distclean
rm -f NEW-RPMS/*

# Stop on error
set -e

/bin/rm -f */.deps/*.P
/bin/rm -f config.cache

aclocal; autoheader; aclocal; automake; autoconf
(cd bdb/dist && sh s_all)
(cd innobase && aclocal && autoheader && aclocal && automake && autoconf)

# A normal user starts here. We must use mit-threads, bdb and innodb.
# Otherwise they do not end up in the distribution.
./configure \
 --with-unix-socket-path=/var/tmp/mysql.sock \
 --with-low-memory \
 --with-mit-threads=yes $EXTRA_CONFIG \
 --enable-thread-safe-client \
 --enable-local-infile \
 --with-berkeley-db \
 --with-innodb \
 --with-vio \
 --without-pstack \
 --with-extra-tools \
 --with-embedded-server

gmake -j 2 

time gmake -j 2 distcheck \
 EXTRA_CONF_ARGS="--with-unix-socket-path=/var/tmp/mysql.sock --with-low-memory $EXTRA_CONFIG"

sh $BD/Build-tools/Do-rpm $*

rm -f $TMP_SCRIPT
END

set -e

log=$WD/Logs/Log-distcheck-`date +%y%m%d-%H%M`

echo "Logging script $TMP_SCRIPT into $log"

if test $to_host = "mysql-work"
then
  # Try to get the right user for MySQL builds on work so that all
  # files is owned by the same user (mysql)
  ssh -n $to_host -l my "time sh $TMP_SCRIPT" > $log 2>&1
else
  time sh $TMP_SCRIPT > $log 2>&1
fi

# Create a commercial MySQL distribution (mysqlcom-VER.tar.gz) from
# the newly made source distribution

cd "$BD"
DIST=`ls -t mysql-*.tar.gz | head -1`
$BD/Build-tools/mysql-copyright --target=. $DIST

# move the binaries to the 'binary' directory
mv $BD/mysql*tar.gz $WD/binary
mv $BD/NEW-RPMS/* $WD/binary
