DROP TABLE IF EXISTS test.t1;
DROP TABLE IF EXISTS test.t2;
**** Test Setup Section ****
CREATE LOGFILE GROUP log_group1
ADD UNDOFILE './log_group1/undofile.dat'
INITIAL_SIZE 16M
UNDO_BUFFER_SIZE = 1M
ENGINE=NDB;
CREATE TABLESPACE table_space1
ADD DATAFILE './table_space1/datafile.dat'
USE LOGFILE GROUP log_group1
INITIAL_SIZE 12M
ENGINE NDB;
CREATE TABLE test.t1
(pk1 INT NOT NULL PRIMARY KEY, b INT NOT NULL, c INT NOT NULL)
TABLESPACE table_space1 STORAGE DISK
ENGINE=NDB;
CREATE TABLE test.t2
(pk2 INT NOT NULL PRIMARY KEY, b2 INT NOT NULL, c2 INT NOT NULL)
ENGINE=NDB;

**** Data load for first test ****
INSERT INTO test.t1 VALUES
(1,1,1),(2,2,2),(3,3,3),(4,4,4),(5,5,5),
(6,6,6),(7,7,7),(8,8,8),(9,9,9),(10,10,10),
(11,11,11),(12,12,12),(13,13,13),(14,14,14),(15,15,15),
(16,16,16),(17,17,17),(18,18,18),(19,19,19),(20,20,20),
(21,21,21),(22,22,22),(23,23,23),(24,24,24),(25,25,25),
(26,26,26),(27,27,27),(28,28,28),(29,29,29),(30,30,30),
(31,31,31),(32,32,32),(33,33,33),(34,34,34),(35,35,35),
(36,36,36),(37,37,37),(38,38,38),(39,39,39),(40,40,40),
(41,41,41),(42,42,42),(43,43,43),(44,44,44),(45,45,45),
(46,46,46),(47,47,47),(48,48,48),(49,49,49),(50,50,50),
(51,51,51),(52,52,52),(53,53,53),(54,54,54),(55,55,55),
(56,56,56),(57,57,57),(58,58,58),(59,59,59),(60,60,60),
(61,61,61),(62,62,62),(63,63,63),(64,64,64),(65,65,65),
(66,66,66),(67,67,67),(68,68,68),(69,69,69),(70,70,70),
(71,71,71),(72,72,72),(73,73,73),(74,74,74),(75,75,75);
INSERT INTO test.t2 VALUES
(1,1,1),(2,2,2),(3,3,3),(4,4,4),(5,5,5),
(6,6,6),(7,7,7),(8,8,8),(9,9,9),(10,10,10),
(11,11,11),(12,12,12),(13,13,13),(14,14,14),(15,15,15),
(16,16,16),(17,17,17),(18,18,18),(19,19,19),(20,20,20),
(21,21,21),(22,22,22),(23,23,23),(24,24,24),(25,25,25),
(26,26,26),(27,27,27),(28,28,28),(29,29,29),(30,30,30),
(31,31,31),(32,32,32),(33,33,33),(34,34,34),(35,35,35),
(36,36,36),(37,37,37),(38,38,38),(39,39,39),(40,40,40),
(41,41,41),(42,42,42),(43,43,43),(44,44,44),(45,45,45),
(46,46,46),(47,47,47),(48,48,48),(49,49,49),(50,50,50),
(51,51,51),(52,52,52),(53,53,53),(54,54,54),(55,55,55),
(56,56,56),(57,57,57),(58,58,58),(59,59,59),(60,60,60),
(61,61,61),(62,62,62),(63,63,63),(64,64,64),(65,65,65),
(66,66,66),(67,67,67),(68,68,68),(69,69,69),(70,70,70),
(71,71,71),(72,72,72),(73,73,73),(74,74,74),(75,75,75);

*** Test 1 Section Begins ***
SELECT COUNT(*) FROM test.t2 LEFT JOIN test.t1 ON pk2=pk1 WHERE b2 IN (4);
COUNT(*)
1
SELECT * FROM test.t2 LEFT JOIN test.t1 ON pk2=pk1 WHERE b2 IN (4);
pk2	b2	c2	pk1	b	c
4	4	4	4	4	4
SELECT COUNT(*) FROM test.t1 LEFT JOIN test.t2 ON pk1=pk2 WHERE b IN (4);
COUNT(*)
1
SELECT COUNT(*) FROM test.t1 LEFT JOIN test.t2 ON b=b2 WHERE pk1 IN (75);
COUNT(*)
1
SELECT b, c FROM test.t1 LEFT JOIN test.t2 ON pk1=pk2 ORDER BY b;
b	c
1	1
2	2
3	3
4	4
5	5
6	6
7	7
8	8
9	9
10	10
11	11
12	12
13	13
14	14
15	15
16	16
17	17
18	18
19	19
20	20
21	21
22	22
23	23
24	24
25	25
26	26
27	27
28	28
29	29
30	30
31	31
32	32
33	33
34	34
35	35
36	36
37	37
38	38
39	39
40	40
41	41
42	42
43	43
44	44
45	45
46	46
47	47
48	48
49	49
50	50
51	51
52	52
53	53
54	54
55	55
56	56
57	57
58	58
59	59
60	60
61	61
62	62
63	63
64	64
65	65
66	66
67	67
68	68
69	69
70	70
71	71
72	72
73	73
74	74
75	75

*** Setup for test 2 ****
DELETE FROM test.t1;
INSERT INTO test.t1 VALUES
(1,1,1),(2,2,2),(3,3,3),(4,4,4),(5,5,5),
(6,6,6),(7,7,7),(8,8,8),(9,9,9),(10,10,10),
(11,11,11),(12,12,12),(13,13,13),(14,14,14),(15,15,15),
(16,16,16),(17,17,17),(18,18,18),(19,19,19),(20,20,20),
(21,21,21),(22,22,22),(23,23,23),(24,24,24),(25,25,25),
(26,26,26),(27,27,27),(28,28,28),(29,29,29),(30,30,30),
(31,31,31),(32,32,32),(33,33,33),(34,34,34),(35,35,35),
(36,36,36),(37,37,37),(38,38,38),(39,39,39),(40,40,40),
(41,41,41),(42,42,42),(43,43,43),(44,44,44),(45,45,45);

**** Test Section 2 ****
SELECT b, c FROM test.t1 LEFT JOIN test.t2 ON pk1=pk2 ORDER BY b;
b	c
1	1
2	2
3	3
4	4
5	5
6	6
7	7
8	8
9	9
10	10
11	11
12	12
13	13
14	14
15	15
16	16
17	17
18	18
19	19
20	20
21	21
22	22
23	23
24	24
25	25
26	26
27	27
28	28
29	29
30	30
31	31
32	32
33	33
34	34
35	35
36	36
37	37
38	38
39	39
40	40
41	41
42	42
43	43
44	44
45	45
SELECT COUNT(*) FROM test.t1 LEFT JOIN test.t2 ON b=b2;
COUNT(*)
45
SELECT COUNT(*) FROM test.t1 RIGHT JOIN test.t2 ON b=b2;
COUNT(*)
75
SHOW CREATE TABLE test.t2;
Table	Create Table
t2	CREATE TABLE `t2` (
  `pk2` int(11) NOT NULL,
  `b2` int(11) NOT NULL,
  `c2` int(11) NOT NULL,
  PRIMARY KEY (`pk2`)
) ENGINE=ndbcluster DEFAULT CHARSET=latin1
SHOW CREATE TABLE test.t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `pk1` int(11) NOT NULL,
  `b` int(11) NOT NULL,
  `c` int(11) NOT NULL,
  PRIMARY KEY (`pk1`)
) TABLESPACE table_space1 STORAGE DISK ENGINE=ndbcluster DEFAULT CHARSET=latin1
ALTER TABLE test.t2 TABLESPACE table_space1 STORAGE DISK
ENGINE=NDB;
SHOW CREATE TABLE test.t2;
Table	Create Table
t2	CREATE TABLE `t2` (
  `pk2` int(11) NOT NULL,
  `b2` int(11) NOT NULL,
  `c2` int(11) NOT NULL,
  PRIMARY KEY (`pk2`)
) TABLESPACE table_space1 STORAGE DISK ENGINE=ndbcluster DEFAULT CHARSET=latin1
ALTER TABLE test.t1 ENGINE=NDBCLUSTER;
SHOW CREATE TABLE test.t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `pk1` int(11) NOT NULL,
  `b` int(11) NOT NULL,
  `c` int(11) NOT NULL,
  PRIMARY KEY (`pk1`)
) ENGINE=ndbcluster DEFAULT CHARSET=latin1

DROP TABLE test.t1;
DROP TABLE test.t2;
*** Setup for Test Section 3 ***
CREATE TABLE test.t1 (
usr_id INT unsigned NOT NULL,
uniq_id INT unsigned NOT NULL AUTO_INCREMENT,
start_num INT unsigned NOT NULL DEFAULT 1,
increment INT unsigned NOT NULL DEFAULT 1,
PRIMARY KEY (uniq_id),
INDEX usr_uniq_idx (usr_id, uniq_id),
INDEX uniq_usr_idx (uniq_id, usr_id))
TABLESPACE table_space1 STORAGE DISK
ENGINE=NDB;
CREATE TABLE test.t2 (
id INT unsigned NOT NULL DEFAULT 0,
usr2_id INT unsigned NOT NULL DEFAULT 0,
max INT unsigned NOT NULL DEFAULT 0,
c_amount INT unsigned NOT NULL DEFAULT 0,
d_max INT unsigned NOT NULL DEFAULT 0,
d_num INT unsigned NOT NULL DEFAULT 0,
orig_time INT unsigned NOT NULL DEFAULT 0,
c_time INT unsigned NOT NULL DEFAULT 0,
active ENUM ("no","yes") NOT NULL,
PRIMARY KEY (id,usr2_id),
INDEX id_idx (id),
INDEX usr2_idx (usr2_id))
ENGINE=NDB;
INSERT INTO test.t1 VALUES (3,NULL,0,50),(3,NULL,0,200),(3,NULL,0,25),(3,NULL,0,84676),(3,NULL,0,235),(3,NULL,0,10),(3,NULL,0,3098),(3,NULL,0,2947),(3,NULL,0,8987),(3,NULL,0,8347654),(3,NULL,0,20398),(3,NULL,0,8976),(3,NULL,0,500),(3,NULL,0,198);

**** Test Section 3 ****
SELECT test.t1.usr_id,test.t1.uniq_id,test.t1.increment,
test.t2.usr2_id,test.t2.c_amount,test.t2.max
FROM test.t1
LEFT JOIN test.t2 ON test.t2.id = test.t1.uniq_id
WHERE test.t1.uniq_id = 4
ORDER BY test.t2.c_amount;
usr_id	uniq_id	increment	usr2_id	c_amount	max
3	4	84676	NULL	NULL	NULL
INSERT INTO test.t2 VALUES (2,3,3000,6000,0,0,746584,837484,'yes');
INSERT INTO test.t2 VALUES (4,3,3000,6000,0,0,746584,837484,'yes');
INSERT INTO test.t2 VALUES (7,3,1000,2000,0,0,746294,937484,'yes');
SELECT test.t1.usr_id,test.t1.uniq_id,test.t1.increment,
test.t2.usr2_id,test.t2.c_amount,test.t2.max
FROM test.t1
LEFT JOIN test.t2 ON test.t2.id = test.t1.uniq_id
WHERE test.t1.uniq_id = 4
ORDER BY test.t2.c_amount;
usr_id	uniq_id	increment	usr2_id	c_amount	max
3	4	84676	3	6000	3000

DROP TABLE test.t1;
DROP TABLE test.t2;
ALTER TABLESPACE table_space1
DROP DATAFILE './table_space1/datafile.dat'
ENGINE = NDB;
DROP TABLESPACE table_space1
ENGINE = NDB;
DROP LOGFILE GROUP log_group1
ENGINE =NDB;
CREATE LOGFILE GROUP lg
ADD UNDOFILE './lg_group/undofile.dat'
 INITIAL_SIZE 16M
UNDO_BUFFER_SIZE = 1M
ENGINE=NDB;
CREATE TABLESPACE ts1
ADD DATAFILE './table_space1/datafile.dat'
 USE LOGFILE GROUP lg
INITIAL_SIZE 12M
ENGINE NDB;
CREATE TABLESPACE ts2
ADD DATAFILE './table_space2/datafile.dat'
 USE LOGFILE GROUP lg
INITIAL_SIZE 12M
ENGINE NDB;
CREATE TABLE t1 (a int NOT NULL PRIMARY KEY, b int) 
TABLESPACE ts1 STORAGE DISK  ENGINE=NDB;
CREATE TABLE t2 (a int NOT NULL PRIMARY KEY, b int) 
ENGINE=NDB;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int(11) NOT NULL,
  `b` int(11) DEFAULT NULL,
  PRIMARY KEY (`a`)
) TABLESPACE ts1 STORAGE DISK ENGINE=ndbcluster DEFAULT CHARSET=latin1
SHOW CREATE TABLE t2;
Table	Create Table
t2	CREATE TABLE `t2` (
  `a` int(11) NOT NULL,
  `b` int(11) DEFAULT NULL,
  PRIMARY KEY (`a`)
) ENGINE=ndbcluster DEFAULT CHARSET=latin1
INSERT INTO t1 VALUES (1,1);
INSERT INTO t1 VALUES (2,2);
SELECT * FROM t1 order by a;
a	b
1	1
2	2
INSERT INTO t2(a,b) SELECT * FROM t1;
SELECT * FROM t2 order by a;
a	b
1	1
2	2
TRUNCATE t1;
TRUNCATE t2;
INSERT INTO t2 VALUES (3,3);
INSERT INTO t2 VALUES (4,4);
INSERT INTO t1(a,b) SELECT * FROM t2;
SELECT * FROM t1 order by a;
a	b
3	3
4	4
DROP TABLE t1, t2;
ALTER TABLESPACE ts1
DROP DATAFILE './table_space1/datafile.dat'
 ENGINE NDB;
DROP TABLESPACE ts1 ENGINE NDB;
ALTER TABLESPACE ts2
DROP DATAFILE './table_space2/datafile.dat'
 ENGINE NDB;
DROP TABLESPACE ts2 ENGINE NDB;
DROP LOGFILE GROUP lg
ENGINE=NDB;
CREATE LOGFILE GROUP lg
ADD UNDOFILE './undofile.dat'
 INITIAL_SIZE 16M
UNDO_BUFFER_SIZE = 1M
ENGINE=NDB;
CREATE TABLESPACE ts
ADD DATAFILE './datafile.dat'
 USE LOGFILE GROUP lg
INITIAL_SIZE 12M
ENGINE NDB;
CREATE TABLE test.t (
a smallint NOT NULL,
b int NOT NULL,
c bigint NOT NULL,
d char(10),
e TEXT,
f VARCHAR(255),
PRIMARY KEY(a)
) TABLESPACE ts STORAGE DISK ENGINE=NDB;
ALTER TABLE test.t ADD INDEX (d), ADD INDEX (f);
SHOW CREATE TABLE test.t;
Table	Create Table
t	CREATE TABLE `t` (
  `a` smallint(6) NOT NULL,
  `b` int(11) NOT NULL,
  `c` bigint(20) NOT NULL,
  `d` char(10) DEFAULT NULL,
  `e` text,
  `f` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`a`),
  KEY `d` (`d`),
  KEY `f` (`f`)
) ENGINE=ndbcluster DEFAULT CHARSET=latin1
SELECT * FROM test.t order by a;
a	b	c	d	e	f
1	2	3	aaa1	bbb1	ccccc1
2	3	4	aaa2	bbb2	ccccc2
3	4	5	aaa3	bbb3	ccccc3
4	5	6	aaa4	bbb4	ccccc4
5	6	7	aaa5	bbb5	ccccc5
6	7	8	aaa6	bbb6	ccccc6
7	8	9	aaa7	bbb7	ccccc7
8	9	10	aaa8	bbb8	ccccc8
9	10	11	aaa9	bbb9	ccccc9
10	11	12	aaa10	bbb10	ccccc10
11	12	13	aaa11	bbb11	ccccc11
12	13	14	aaa12	bbb12	ccccc12
13	14	15	aaa13	bbb13	ccccc13
14	15	16	aaa14	bbb14	ccccc14
15	16	17	aaa15	bbb15	ccccc15
16	17	18	aaa16	bbb16	ccccc16
17	18	19	aaa17	bbb17	ccccc17
18	19	20	aaa18	bbb18	ccccc18
19	20	21	aaa19	bbb19	ccccc19
20	21	22	aaa20	bbb20	ccccc20
21	22	23	aaa21	bbb21	ccccc21
22	23	24	aaa22	bbb22	ccccc22
23	24	25	aaa23	bbb23	ccccc23
24	25	26	aaa24	bbb24	ccccc24
25	26	27	aaa25	bbb25	ccccc25
26	27	28	aaa26	bbb26	ccccc26
27	28	29	aaa27	bbb27	ccccc27
28	29	30	aaa28	bbb28	ccccc28
29	30	31	aaa29	bbb29	ccccc29
30	31	32	aaa30	bbb30	ccccc30
31	32	33	aaa31	bbb31	ccccc31
32	33	34	aaa32	bbb32	ccccc32
33	34	35	aaa33	bbb33	ccccc33
34	35	36	aaa34	bbb34	ccccc34
35	36	37	aaa35	bbb35	ccccc35
36	37	38	aaa36	bbb36	ccccc36
37	38	39	aaa37	bbb37	ccccc37
38	39	40	aaa38	bbb38	ccccc38
39	40	41	aaa39	bbb39	ccccc39
40	41	42	aaa40	bbb40	ccccc40
41	42	43	aaa41	bbb41	ccccc41
42	43	44	aaa42	bbb42	ccccc42
43	44	45	aaa43	bbb43	ccccc43
44	45	46	aaa44	bbb44	ccccc44
45	46	47	aaa45	bbb45	ccccc45
46	47	48	aaa46	bbb46	ccccc46
47	48	49	aaa47	bbb47	ccccc47
48	49	50	aaa48	bbb48	ccccc48
49	50	51	aaa49	bbb49	ccccc49
50	51	52	aaa50	bbb50	ccccc50
51	52	53	aaa51	bbb51	ccccc51
52	53	54	aaa52	bbb52	ccccc52
53	54	55	aaa53	bbb53	ccccc53
54	55	56	aaa54	bbb54	ccccc54
55	56	57	aaa55	bbb55	ccccc55
56	57	58	aaa56	bbb56	ccccc56
57	58	59	aaa57	bbb57	ccccc57
58	59	60	aaa58	bbb58	ccccc58
59	60	61	aaa59	bbb59	ccccc59
60	61	62	aaa60	bbb60	ccccc60
61	62	63	aaa61	bbb61	ccccc61
62	63	64	aaa62	bbb62	ccccc62
63	64	65	aaa63	bbb63	ccccc63
64	65	66	aaa64	bbb64	ccccc64
65	66	67	aaa65	bbb65	ccccc65
66	67	68	aaa66	bbb66	ccccc66
67	68	69	aaa67	bbb67	ccccc67
68	69	70	aaa68	bbb68	ccccc68
69	70	71	aaa69	bbb69	ccccc69
70	71	72	aaa70	bbb70	ccccc70
71	72	73	aaa71	bbb71	ccccc71
72	73	74	aaa72	bbb72	ccccc72
73	74	75	aaa73	bbb73	ccccc73
74	75	76	aaa74	bbb74	ccccc74
75	76	77	aaa75	bbb75	ccccc75
76	77	78	aaa76	bbb76	ccccc76
77	78	79	aaa77	bbb77	ccccc77
78	79	80	aaa78	bbb78	ccccc78
79	80	81	aaa79	bbb79	ccccc79
80	81	82	aaa80	bbb80	ccccc80
81	82	83	aaa81	bbb81	ccccc81
82	83	84	aaa82	bbb82	ccccc82
83	84	85	aaa83	bbb83	ccccc83
84	85	86	aaa84	bbb84	ccccc84
85	86	87	aaa85	bbb85	ccccc85
86	87	88	aaa86	bbb86	ccccc86
87	88	89	aaa87	bbb87	ccccc87
88	89	90	aaa88	bbb88	ccccc88
89	90	91	aaa89	bbb89	ccccc89
90	91	92	aaa90	bbb90	ccccc90
91	92	93	aaa91	bbb91	ccccc91
92	93	94	aaa92	bbb92	ccccc92
93	94	95	aaa93	bbb93	ccccc93
94	95	96	aaa94	bbb94	ccccc94
95	96	97	aaa95	bbb95	ccccc95
96	97	98	aaa96	bbb96	ccccc96
97	98	99	aaa97	bbb97	ccccc97
98	99	100	aaa98	bbb98	ccccc98
99	100	101	aaa99	bbb99	ccccc99
100	101	102	aaa100	bbb100	ccccc100
DROP TABLE test.t;
USE test;
show tables;
Tables_in_test
t
SELECT * FROM test.t order by a;
a	b	c	d	e	f
1	2	3	aaa1	bbb1	ccccc1
2	3	4	aaa2	bbb2	ccccc2
3	4	5	aaa3	bbb3	ccccc3
4	5	6	aaa4	bbb4	ccccc4
5	6	7	aaa5	bbb5	ccccc5
6	7	8	aaa6	bbb6	ccccc6
7	8	9	aaa7	bbb7	ccccc7
8	9	10	aaa8	bbb8	ccccc8
9	10	11	aaa9	bbb9	ccccc9
10	11	12	aaa10	bbb10	ccccc10
11	12	13	aaa11	bbb11	ccccc11
12	13	14	aaa12	bbb12	ccccc12
13	14	15	aaa13	bbb13	ccccc13
14	15	16	aaa14	bbb14	ccccc14
15	16	17	aaa15	bbb15	ccccc15
16	17	18	aaa16	bbb16	ccccc16
17	18	19	aaa17	bbb17	ccccc17
18	19	20	aaa18	bbb18	ccccc18
19	20	21	aaa19	bbb19	ccccc19
20	21	22	aaa20	bbb20	ccccc20
21	22	23	aaa21	bbb21	ccccc21
22	23	24	aaa22	bbb22	ccccc22
23	24	25	aaa23	bbb23	ccccc23
24	25	26	aaa24	bbb24	ccccc24
25	26	27	aaa25	bbb25	ccccc25
26	27	28	aaa26	bbb26	ccccc26
27	28	29	aaa27	bbb27	ccccc27
28	29	30	aaa28	bbb28	ccccc28
29	30	31	aaa29	bbb29	ccccc29
30	31	32	aaa30	bbb30	ccccc30
31	32	33	aaa31	bbb31	ccccc31
32	33	34	aaa32	bbb32	ccccc32
33	34	35	aaa33	bbb33	ccccc33
34	35	36	aaa34	bbb34	ccccc34
35	36	37	aaa35	bbb35	ccccc35
36	37	38	aaa36	bbb36	ccccc36
37	38	39	aaa37	bbb37	ccccc37
38	39	40	aaa38	bbb38	ccccc38
39	40	41	aaa39	bbb39	ccccc39
40	41	42	aaa40	bbb40	ccccc40
41	42	43	aaa41	bbb41	ccccc41
42	43	44	aaa42	bbb42	ccccc42
43	44	45	aaa43	bbb43	ccccc43
44	45	46	aaa44	bbb44	ccccc44
45	46	47	aaa45	bbb45	ccccc45
46	47	48	aaa46	bbb46	ccccc46
47	48	49	aaa47	bbb47	ccccc47
48	49	50	aaa48	bbb48	ccccc48
49	50	51	aaa49	bbb49	ccccc49
50	51	52	aaa50	bbb50	ccccc50
51	52	53	aaa51	bbb51	ccccc51
52	53	54	aaa52	bbb52	ccccc52
53	54	55	aaa53	bbb53	ccccc53
54	55	56	aaa54	bbb54	ccccc54
55	56	57	aaa55	bbb55	ccccc55
56	57	58	aaa56	bbb56	ccccc56
57	58	59	aaa57	bbb57	ccccc57
58	59	60	aaa58	bbb58	ccccc58
59	60	61	aaa59	bbb59	ccccc59
60	61	62	aaa60	bbb60	ccccc60
61	62	63	aaa61	bbb61	ccccc61
62	63	64	aaa62	bbb62	ccccc62
63	64	65	aaa63	bbb63	ccccc63
64	65	66	aaa64	bbb64	ccccc64
65	66	67	aaa65	bbb65	ccccc65
66	67	68	aaa66	bbb66	ccccc66
67	68	69	aaa67	bbb67	ccccc67
68	69	70	aaa68	bbb68	ccccc68
69	70	71	aaa69	bbb69	ccccc69
70	71	72	aaa70	bbb70	ccccc70
71	72	73	aaa71	bbb71	ccccc71
72	73	74	aaa72	bbb72	ccccc72
73	74	75	aaa73	bbb73	ccccc73
74	75	76	aaa74	bbb74	ccccc74
75	76	77	aaa75	bbb75	ccccc75
76	77	78	aaa76	bbb76	ccccc76
77	78	79	aaa77	bbb77	ccccc77
78	79	80	aaa78	bbb78	ccccc78
79	80	81	aaa79	bbb79	ccccc79
80	81	82	aaa80	bbb80	ccccc80
81	82	83	aaa81	bbb81	ccccc81
82	83	84	aaa82	bbb82	ccccc82
83	84	85	aaa83	bbb83	ccccc83
84	85	86	aaa84	bbb84	ccccc84
85	86	87	aaa85	bbb85	ccccc85
86	87	88	aaa86	bbb86	ccccc86
87	88	89	aaa87	bbb87	ccccc87
88	89	90	aaa88	bbb88	ccccc88
89	90	91	aaa89	bbb89	ccccc89
90	91	92	aaa90	bbb90	ccccc90
91	92	93	aaa91	bbb91	ccccc91
92	93	94	aaa92	bbb92	ccccc92
93	94	95	aaa93	bbb93	ccccc93
94	95	96	aaa94	bbb94	ccccc94
95	96	97	aaa95	bbb95	ccccc95
96	97	98	aaa96	bbb96	ccccc96
97	98	99	aaa97	bbb97	ccccc97
98	99	100	aaa98	bbb98	ccccc98
99	100	101	aaa99	bbb99	ccccc99
100	101	102	aaa100	bbb100	ccccc100
DROP TABLE test.t;
ALTER TABLESPACE ts
DROP DATAFILE './datafile.dat'
 ENGINE NDB;
DROP TABLESPACE ts ENGINE NDB;
DROP LOGFILE GROUP lg
ENGINE=NDB;
DROP table IF EXISTS test.t1;
Warnings:
Note	1051	Unknown table 't1'
DROP table IF EXISTS test.t2;
Warnings:
Note	1051	Unknown table 't2'
CREATE LOGFILE GROUP lg
ADD UNDOFILE './lg_group/undofile.dat'
 INITIAL_SIZE 16M
UNDO_BUFFER_SIZE = 1M
ENGINE=NDB;
CREATE TABLESPACE ts1
ADD DATAFILE './table_space1/datafile.dat'
 USE LOGFILE GROUP lg
INITIAL_SIZE 12M
ENGINE NDB;
CREATE TABLESPACE ts2
ADD DATAFILE './table_space2/datafile.dat'
 USE LOGFILE GROUP lg
INITIAL_SIZE 12M
ENGINE NDB;
CREATE TABLE test.t1 (
a1 smallint NOT NULL,
a2 int NOT NULL,
a3 bigint NOT NULL,
a4 char(10),
a5 decimal(5,1),
a6 time,
a7 date,
a8 datetime,
a9 VARCHAR(255),
a10 blob,
PRIMARY KEY(a1)
) TABLESPACE ts1 STORAGE DISK ENGINE=NDB;
ALTER TABLE test.t1 ADD INDEX (a2), ADD INDEX (a3), ADD INDEX (a8);
SHOW CREATE TABLE test.t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a1` smallint(6) NOT NULL,
  `a2` int(11) NOT NULL,
  `a3` bigint(20) NOT NULL,
  `a4` char(10) DEFAULT NULL,
  `a5` decimal(5,1) DEFAULT NULL,
  `a6` time DEFAULT NULL,
  `a7` date DEFAULT NULL,
  `a8` datetime DEFAULT NULL,
  `a9` varchar(255) DEFAULT NULL,
  `a10` blob,
  PRIMARY KEY (`a1`),
  KEY `a2` (`a2`),
  KEY `a3` (`a3`),
  KEY `a8` (`a8`)
) ENGINE=ndbcluster DEFAULT CHARSET=latin1
CREATE TABLE test.t2 (
b1 smallint NOT NULL,
b2 int NOT NULL,
b3 bigint NOT NULL,
b4 char(10),
b5 decimal(5,1),
b6 time,
b7 date,
b8 datetime,
b9 VARCHAR(255),
b10 blob,
PRIMARY KEY(b1)
) ENGINE=NDB;
ALTER TABLE test.t2 ADD INDEX (b2), ADD INDEX (b3), ADD INDEX (b8);
SHOW CREATE TABLE test.t2;
Table	Create Table
t2	CREATE TABLE `t2` (
  `b1` smallint(6) NOT NULL,
  `b2` int(11) NOT NULL,
  `b3` bigint(20) NOT NULL,
  `b4` char(10) DEFAULT NULL,
  `b5` decimal(5,1) DEFAULT NULL,
  `b6` time DEFAULT NULL,
  `b7` date DEFAULT NULL,
  `b8` datetime DEFAULT NULL,
  `b9` varchar(255) DEFAULT NULL,
  `b10` blob,
  PRIMARY KEY (`b1`),
  KEY `b2` (`b2`),
  KEY `b3` (`b3`),
  KEY `b8` (`b8`)
) ENGINE=ndbcluster DEFAULT CHARSET=latin1
SELECT * FROM test.t1 order by a1;
a1	a2	a3	a4	a5	a6	a7	a8	a9	a10
1	2	2000000001	aaa1	34.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb1	binary data
2	3	2000000002	aaa2	34.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb2	binary data
3	4	2000000003	aaa3	34.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb3	binary data
4	5	2000000004	aaa4	34.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb4	binary data
5	6	2000000005	aaa5	34.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb5	binary data
6	7	2000000006	aaa6	34.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb6	binary data
7	8	2000000007	aaa7	34.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb7	binary data
8	9	2000000008	aaa8	34.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb8	binary data
9	10	2000000009	aaa9	34.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb9	binary data
10	11	2000000010	aaa10	34.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb10	binary data
11	12	2000000011	aaa11	34.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb11	binary data
12	13	2000000012	aaa12	34.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb12	binary data
13	14	2000000013	aaa13	34.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb13	binary data
14	15	2000000014	aaa14	34.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb14	binary data
15	16	2000000015	aaa15	34.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb15	binary data
16	17	2000000016	aaa16	34.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb16	binary data
17	18	2000000017	aaa17	34.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb17	binary data
18	19	2000000018	aaa18	34.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb18	binary data
19	20	2000000019	aaa19	34.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb19	binary data
20	21	2000000020	aaa20	34.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb20	binary data
SELECT * FROM test.t2 order by b1;
b1	b2	b3	b4	b5	b6	b7	b8	b9	b10
3	4	3000000001	aaa1	35.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb1	binary data
4	5	3000000002	aaa2	35.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb2	binary data
5	6	3000000003	aaa3	35.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb3	binary data
6	7	3000000004	aaa4	35.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb4	binary data
7	8	3000000005	aaa5	35.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb5	binary data
8	9	3000000006	aaa6	35.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb6	binary data
9	10	3000000007	aaa7	35.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb7	binary data
10	11	3000000008	aaa8	35.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb8	binary data
11	12	3000000009	aaa9	35.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb9	binary data
12	13	3000000010	aaa10	35.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb10	binary data
13	14	3000000011	aaa11	35.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb11	binary data
14	15	3000000012	aaa12	35.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb12	binary data
15	16	3000000013	aaa13	35.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb13	binary data
16	17	3000000014	aaa14	35.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb14	binary data
17	18	3000000015	aaa15	35.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb15	binary data
18	19	3000000016	aaa16	35.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb16	binary data
19	20	3000000017	aaa17	35.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb17	binary data
20	21	3000000018	aaa18	35.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb18	binary data
21	22	3000000019	aaa19	35.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb19	binary data
22	23	3000000020	aaa20	35.2	04:03:02	2006-01-01	1971-05-28 16:55:03	bbbbbbbbbbbbb20	binary data
SELECT COUNT(a1), a1, COUNT(a1)*a1 FROM test.t1 GROUP BY a1;
COUNT(a1)	a1	COUNT(a1)*a1
1	1	1
1	2	2
1	3	3
1	4	4
1	5	5
1	6	6
1	7	7
1	8	8
1	9	9
1	10	10
1	11	11
1	12	12
1	13	13
1	14	14
1	15	15
1	16	16
1	17	17
1	18	18
1	19	19
1	20	20
SELECT COUNT(a2), (a2+1), COUNT(a2)*(a2+0) FROM test.t1 GROUP BY a2;
COUNT(a2)	(a2+1)	COUNT(a2)*(a2+0)
1	3	2
1	4	3
1	5	4
1	6	5
1	7	6
1	8	7
1	9	8
1	10	9
1	11	10
1	12	11
1	13	12
1	14	13
1	15	14
1	16	15
1	17	16
1	18	17
1	19	18
1	20	19
1	21	20
1	22	21
DROP TABLE test.t1;
DROP TABLE test.t2;
create table test.t1 (a int not null,b char(5), c text) TABLESPACE ts1 STORAGE DISK ENGINE=NDB;
Warnings:
Error	1465	Table storage engine 'ndbcluster' does not support the create option 'Binlog of table with BLOB attribute and no PK'
insert into test.t1 (a) values (1),(2),(3),(4),(1),(2),(3),(4);
select distinct a from test.t1 group by b,a having a > 2 order by a desc;
a
4
3
select distinct a,c from test.t1 group by b,c,a having a > 2 order by a desc;
a	c
4	NULL
3	NULL
select distinct a from test.t1 group by b,a having a > 2 order by a asc;
a
3
4
select distinct a,c from test.t1 group by b,c,a having a > 2 order by a asc;
a	c
3	NULL
4	NULL
drop table test.t1;
create table test.t1 (a char(1), key(a)) TABLESPACE ts1 STORAGE DISK ENGINE=NDB;
insert into test.t1 values('1'),('1'),('1'),('2'),('2'),('3'),('3');
select * from test.t1 where a >= '1' order by a;
a
1
1
1
2
2
3
3
select distinct a from test.t1 order by a desc;
a
3
2
1
select distinct a from test.t1 where a >= '1' order by a desc;
a
3
2
1
select distinct a from test.t1 where a >= '1' order by a asc;
a
1
2
3
drop table test.t1;
CREATE TABLE test.t1 (email varchar(50), infoID BIGINT, dateentered DATETIME) TABLESPACE ts1 STORAGE DISK ENGINE=NDB;
CREATE TABLE test.t2 (infoID BIGINT, shipcode varchar(10)) ENGINE=NDB;
INSERT INTO test.t1 (email, infoID, dateentered) VALUES
('test1@testdomain.com', 1, '2002-07-30 22:56:38'),
('test1@testdomain.com', 1, '2002-07-27 22:58:16'),
('test2@testdomain.com', 1, '2002-06-19 15:22:19'),
('test2@testdomain.com', 2, '2002-06-18 14:23:47'),
('test3@testdomain.com', 1, '2002-05-19 22:17:32');
INSERT INTO test.t2(infoID, shipcode) VALUES
(1, 'Z001'),
(2, 'R002');
SELECT DISTINCTROW email, shipcode FROM test.t1, test.t2 WHERE t1.infoID=t2.infoID order by email, shipcode;
email	shipcode
test1@testdomain.com	Z001
test2@testdomain.com	R002
test2@testdomain.com	Z001
test3@testdomain.com	Z001
SELECT DISTINCTROW email FROM test.t1 ORDER BY dateentered DESC;
email
test1@testdomain.com
test2@testdomain.com
test3@testdomain.com
SELECT DISTINCTROW email, shipcode FROM test.t1, test.t2 WHERE test.t1.infoID=test.t2.infoID ORDER BY dateentered DESC;
email	shipcode
test1@testdomain.com	Z001
test2@testdomain.com	Z001
test2@testdomain.com	R002
test3@testdomain.com	Z001
drop table test.t1,test.t2;
ALTER TABLESPACE ts1
DROP DATAFILE './table_space1/datafile.dat'
 ENGINE NDB;
DROP TABLESPACE ts1 ENGINE NDB;
ALTER TABLESPACE ts2
DROP DATAFILE './table_space2/datafile.dat'
 ENGINE NDB;
DROP TABLESPACE ts2 ENGINE NDB;
DROP LOGFILE GROUP lg
ENGINE=NDB;
DROP TABLE IF EXISTS test.t;
Warnings:
Note	1051	Unknown table 't'
create table test.t (f1 varchar(50) primary key, f2 text,f3 int) engine=NDB;
insert into test.t (f1,f2,f3)VALUES("111111","aaaaaa",1);
insert into test.t (f1,f2,f3)VALUES("222222","bbbbbb",2);
select * from test.t order by f1;
f1	f2	f3
111111	aaaaaa	1
222222	bbbbbb	2
select f1,f2 from test.t order by f2;
f1	f2
111111	aaaaaa
222222	bbbbbb
select f2 from test.t order by f2;
f2
aaaaaa
bbbbbb
select f1,f2 from test.t order by f1;
f1	f2
111111	aaaaaa
222222	bbbbbb
drop table test.t;
CREATE LOGFILE GROUP lg
ADD UNDOFILE './lg_group/undofile.dat'
 INITIAL_SIZE 16M
UNDO_BUFFER_SIZE = 1M
ENGINE=NDB;
CREATE TABLESPACE ts
ADD DATAFILE './table_space/datafile.dat'
 USE LOGFILE GROUP lg
INITIAL_SIZE 12M
ENGINE NDB;
CREATE TABLE test.t1 (a1 INT, a2 BLOB, a3 TEXT) ENGINE=InnoDB;
SHOW CREATE TABLE test.t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a1` int(11) DEFAULT NULL,
  `a2` blob,
  `a3` text
) ENGINE=InnoDB DEFAULT CHARSET=latin1
ALTER TABLE test.t1 TABLESPACE ts STORAGE DISK ENGINE=NDB;
Warnings:
Error	1465	Table storage engine 'ndbcluster' does not support the create option 'Binlog of table with BLOB attribute and no PK'
SHOW CREATE TABLE test.t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a1` int(11) DEFAULT NULL,
  `a2` blob,
  `a3` text
) TABLESPACE ts STORAGE DISK ENGINE=ndbcluster DEFAULT CHARSET=latin1
DROP TABLE test.t1;
CREATE TABLE test.t1 (a1 INT, a2 BLOB, a3 TEXT) ENGINE=MyISAM;
SHOW CREATE TABLE test.t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a1` int(11) DEFAULT NULL,
  `a2` blob,
  `a3` text
) ENGINE=MyISAM DEFAULT CHARSET=latin1
ALTER TABLE test.t1 TABLESPACE ts STORAGE DISK ENGINE=NDB;
Warnings:
Error	1465	Table storage engine 'ndbcluster' does not support the create option 'Binlog of table with BLOB attribute and no PK'
SHOW CREATE TABLE test.t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a1` int(11) DEFAULT NULL,
  `a2` blob,
  `a3` text
) TABLESPACE ts STORAGE DISK ENGINE=ndbcluster DEFAULT CHARSET=latin1
DROP TABLE test.t1;
CREATE TABLE test.t1 (a1 INT PRIMARY KEY, a2 BLOB, a3 TEXT) TABLESPACE ts STORAGE DISK ENGINE=NDB;
SHOW CREATE TABLE test.t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a1` int(11) NOT NULL,
  `a2` blob,
  `a3` text,
  PRIMARY KEY (`a1`)
) TABLESPACE ts STORAGE DISK ENGINE=ndbcluster DEFAULT CHARSET=latin1
ALTER TABLE test.t1 ENGINE=InnoDB;
SHOW CREATE TABLE test.t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a1` int(11) NOT NULL,
  `a2` blob,
  `a3` text,
  PRIMARY KEY (`a1`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1
DROP TABLE test.t1;
CREATE TABLE test.t1 (a1 INT, a2 BLOB, a3 TEXT) TABLESPACE ts STORAGE DISK ENGINE=NDB;
Warnings:
Error	1465	Table storage engine 'ndbcluster' does not support the create option 'Binlog of table with BLOB attribute and no PK'
SHOW CREATE TABLE test.t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a1` int(11) DEFAULT NULL,
  `a2` blob,
  `a3` text
) TABLESPACE ts STORAGE DISK ENGINE=ndbcluster DEFAULT CHARSET=latin1
ALTER TABLE test.t1 ENGINE=MyISAM;
SHOW CREATE TABLE test.t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a1` int(11) DEFAULT NULL,
  `a2` blob,
  `a3` text
) ENGINE=MyISAM DEFAULT CHARSET=latin1
DROP TABLE test.t1;
CREATE TABLE test.t1 (a1 INT PRIMARY KEY) TABLESPACE ts STORAGE DISK ENGINE=NDB;
ALTER TABLE test.t1 ADD a2 FLOAT, ADD a3 DOUBLE, ADD a4 BIT, ADD a5 TINYINT, ADD a6 BIGINT, ADD a7 DATE, ADD a8 TIME, ADD a9 DATETIME, ADD a10 TINYTEXT, ADD a11 MEDIUMTEXT, ADD a12 LONGTEXT, ADD a13 TEXT, ADD a14 BLOB;
SHOW CREATE TABLE test.t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a1` int(11) NOT NULL,
  `a2` float DEFAULT NULL,
  `a3` double DEFAULT NULL,
  `a4` bit(1) DEFAULT NULL,
  `a5` tinyint(4) DEFAULT NULL,
  `a6` bigint(20) DEFAULT NULL,
  `a7` date DEFAULT NULL,
  `a8` time DEFAULT NULL,
  `a9` datetime DEFAULT NULL,
  `a10` tinytext,
  `a11` mediumtext,
  `a12` longtext,
  `a13` text,
  `a14` blob,
  PRIMARY KEY (`a1`)
) ENGINE=ndbcluster DEFAULT CHARSET=latin1
ALTER TABLE test.t1 ADD INDEX (a2), ADD INDEX (a3), ADD INDEX (a5), ADD INDEX (a6),
ADD INDEX (a7), ADD INDEX (a8);
SHOW CREATE TABLE test.t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a1` int(11) NOT NULL,
  `a2` float DEFAULT NULL,
  `a3` double DEFAULT NULL,
  `a4` bit(1) DEFAULT NULL,
  `a5` tinyint(4) DEFAULT NULL,
  `a6` bigint(20) DEFAULT NULL,
  `a7` date DEFAULT NULL,
  `a8` time DEFAULT NULL,
  `a9` datetime DEFAULT NULL,
  `a10` tinytext,
  `a11` mediumtext,
  `a12` longtext,
  `a13` text,
  `a14` blob,
  PRIMARY KEY (`a1`),
  KEY `a2` (`a2`),
  KEY `a3` (`a3`),
  KEY `a5` (`a5`),
  KEY `a6` (`a6`),
  KEY `a7` (`a7`),
  KEY `a8` (`a8`)
) ENGINE=ndbcluster DEFAULT CHARSET=latin1
DROP TABLE test.t1;
CREATE TABLE test.t1 (a1 INT PRIMARY KEY) TABLESPACE ts STORAGE DISK ENGINE=NDB;
ALTER TABLE test.t1 ADD a2 FLOAT, ADD a3 DOUBLE, ADD a4 BIT, ADD a5 TINYINT, ADD a6 BIGINT, ADD a7 DATE, ADD a8 TIME, ADD a9 DATETIME, ADD a10 TINYTEXT, ADD a11 MEDIUMTEXT, ADD a12 LONGTEXT, ADD a13 TEXT, ADD a14 BLOB;
SHOW CREATE TABLE test.t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a1` int(11) NOT NULL,
  `a2` float DEFAULT NULL,
  `a3` double DEFAULT NULL,
  `a4` bit(1) DEFAULT NULL,
  `a5` tinyint(4) DEFAULT NULL,
  `a6` bigint(20) DEFAULT NULL,
  `a7` date DEFAULT NULL,
  `a8` time DEFAULT NULL,
  `a9` datetime DEFAULT NULL,
  `a10` tinytext,
  `a11` mediumtext,
  `a12` longtext,
  `a13` text,
  `a14` blob,
  PRIMARY KEY (`a1`)
) ENGINE=ndbcluster DEFAULT CHARSET=latin1
ALTER TABLE test.t1 DROP a14;
ALTER TABLE test.t1 DROP a13;
ALTER TABLE test.t1 DROP a12;
ALTER TABLE test.t1 DROP a11;
ALTER TABLE test.t1 DROP a10;
ALTER TABLE test.t1 DROP a9;
ALTER TABLE test.t1 DROP a8;
ALTER TABLE test.t1 DROP a7;
ALTER TABLE test.t1 DROP a6;
ALTER TABLE test.t1 DROP PRIMARY KEY;
SHOW CREATE TABLE test.t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a1` int(11) NOT NULL,
  `a2` float DEFAULT NULL,
  `a3` double DEFAULT NULL,
  `a4` bit(1) DEFAULT NULL,
  `a5` tinyint(4) DEFAULT NULL
) ENGINE=ndbcluster DEFAULT CHARSET=latin1
DROP TABLE test.t1;
ALTER TABLESPACE ts
DROP DATAFILE './table_space/datafile.dat'
 ENGINE NDB;
DROP TABLESPACE ts ENGINE NDB;
DROP LOGFILE GROUP lg
ENGINE=NDB;
