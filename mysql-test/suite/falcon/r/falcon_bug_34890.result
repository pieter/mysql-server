*** Bug #34890 ***
SET @@storage_engine = 'Falcon';
DROP TABLE IF EXISTS t1;
DROP PROCEDURE IF EXISTS p1;
# Establish connection conn1 (user = root)
SET @@autocommit = 1;
# Establish connection conn2 (user = root)
SET @@autocommit = 1;
# Establish connection conn3 (user = root)
SET @@autocommit = 1;
# Establish connection conn4 (user = root)
SET @@autocommit = 1;
# Switch to connection default
SET @@autocommit = 1;
CREATE TABLE t1 (
t1_autoinc INTEGER NOT NULL AUTO_INCREMENT,
t1_uuid CHAR(36),
PRIMARY KEY (t1_autoinc)
) ENGINE = Falcon;
CREATE PROCEDURE p1 ()
begin
DECLARE my_count INT DEFAULT 0;
DECLARE my_uuid CHAR(36) DEFAULT 0;
SET FALCON_CONSISTENT_READ=OFF;
while my_count < 5000 do
SET my_uuid = UUID();
INSERT INTO t1 (t1_uuid) VALUES (my_uuid);
DELETE FROM t1 WHERE t1_uuid IN (my_uuid);
SET my_count = my_count + 1;
end while;
end//
# Switch to connection conn1
# Send call p1() to the server but do not pull the results
CALL p1();
# Switch to connection conn2
# Send call p1() to the server but do not pull the results
CALL p1();
# Switch to connection conn3
# Send call p1() to the server but do not pull the results
CALL p1();
# Switch to connection conn4
# Send call p1() to the server but do not pull the results
CALL p1();
# Switch to connection default
CALL p1();
# Switch to connection conn1
# Pull the results of the preceeding call p1() by conn1
# Switch to connection conn2
# Pull the results of the preceeding call p1() by conn2
# Switch to connection conn3
# Pull the results of the preceeding call p1() by conn3
# Switch to connection conn4
# Pull the results of the preceeding call p1() by conn4
# Switch to connection default
DROP PROCEDURE p1;
DROP TABLE t1;
