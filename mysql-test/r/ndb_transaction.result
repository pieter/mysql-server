DROP TABLE IF EXISTS t1,t2,t3,t4,t5,t6,t7;
CREATE TABLE t1 (
pk1 INT NOT NULL PRIMARY KEY,
attr1 INT NOT NULL
) ENGINE=ndbcluster;
begin;
insert into t1 values(1,1);
insert into t1 values(2,2);
select count(*) from t1;
count(*)
2
select * from t1 where pk1 = 1;
pk1	attr1
1	1
select t1.attr1 from t1, t1 as t1x where t1.pk1 = t1x.pk1 + 1;
attr1
2
rollback;
select count(*) from t1;
count(*)
0
select * from t1 where pk1 = 1;
pk1	attr1
select t1.attr1 from t1, t1 as t1x where t1.pk1 = t1x.pk1 + 1;
attr1
begin;
insert into t1 values(1,1);
insert into t1 values(2,2);
commit;
select count(*) from t1;
count(*)
2
select * from t1 where pk1 = 1;
pk1	attr1
1	1
select t1.attr1 from t1, t1 as t1x where t1.pk1 = t1x.pk1 + 1;
attr1
2
begin;
update t1 set attr1 = attr1 * 2;
select count(*) from t1;
count(*)
2
select * from t1 where pk1 = 1;
pk1	attr1
1	2
select * from t1, t1 as t1x where t1x.attr1 = t1.attr1 - 2;
pk1	attr1	pk1	attr1
2	4	1	2
rollback;
select count(*) from t1;
count(*)
2
select * from t1 where pk1 = 1;
pk1	attr1
1	1
select * from t1, t1 as t1x where t1x.attr1 = t1.attr1 - 2;
pk1	attr1	pk1	attr1
begin;
update t1 set attr1 = attr1 * 2;
commit;
select count(*) from t1;
count(*)
2
select * from t1 where pk1 = 1;
pk1	attr1
1	2
select * from t1, t1 as t1x where t1x.attr1 = t1.attr1 - 2;
pk1	attr1	pk1	attr1
2	4	1	2
begin;
delete from t1 where attr1 = 2;
select count(*) from t1;
count(*)
1
select * from t1 where pk1 = 1;
pk1	attr1
select * from t1, t1 as t1x where t1x.attr1 = t1.attr1 - 2;
pk1	attr1	pk1	attr1
rollback;
select count(*) from t1;
count(*)
2
select * from t1 where pk1 = 1;
pk1	attr1
1	2
select * from t1, t1 as t1x where t1x.attr1 = t1.attr1 - 2;
pk1	attr1	pk1	attr1
2	4	1	2
begin;
delete from t1 where attr1 = 2;
commit;
select count(*) from t1;
count(*)
1
select * from t1 where pk1 = 1;
pk1	attr1
select * from t1, t1 as t1x where t1x.attr1 = t1.attr1 - 2;
pk1	attr1	pk1	attr1
DROP TABLE t1;
CREATE TABLE t1 (id INT, id2 int) engine=ndbcluster;
begin;
insert into t1 values(1,1);
insert into t1 values(2,2);
select sum(id) from t1;
sum(id)
3
select * from t1 where id = 1;
id	id2
1	1
select t1.id from t1, t1 as t1x where t1.id2 = t1x.id2 + 1;
id
2
rollback;
select sum(id) from t1;
sum(id)
NULL
select * from t1 where id = 1;
id	id2
select t1.id from t1, t1 as t1x where t1.id2 = t1x.id2 + 1;
id
begin;
insert into t1 values(1,1);
insert into t1 values(2,2);
commit;
select sum(id) from t1;
sum(id)
3
select * from t1 where id = 1;
id	id2
1	1
select t1.id from t1, t1 as t1x where t1.id2 = t1x.id2 + 1;
id
2
begin;
update t1 set id = id * 2;
select sum(id) from t1;
sum(id)
6
select * from t1 where id = 2;
id	id2
2	1
select * from t1, t1 as t1x where t1x.id = t1.id - 2;
id	id2	id	id2
4	2	2	1
rollback;
select sum(id) from t1;
sum(id)
3
select * from t1 where id = 2;
id	id2
2	2
select * from t1, t1 as t1x where t1x.id = t1.id - 2;
id	id2	id	id2
begin;
update t1 set id = id * 2;
commit;
select sum(id) from t1;
sum(id)
6
select * from t1 where id = 2;
id	id2
2	1
select * from t1, t1 as t1x where t1x.id = t1.id - 2;
id	id2	id	id2
4	2	2	1
DROP TABLE t1;
CREATE TABLE t2 (
a bigint unsigned NOT NULL PRIMARY KEY,
b int unsigned not null,
c int unsigned
) engine=ndbcluster;
CREATE TABLE t3 (
a bigint unsigned NOT NULL,
b bigint unsigned not null,
c bigint unsigned,
PRIMARY KEY(a)
) engine=ndbcluster;
CREATE TABLE t4 (
a bigint unsigned NOT NULL,
b bigint unsigned not null,
c bigint unsigned NOT NULL,
d int unsigned,
PRIMARY KEY(a, b, c)
) engine=ndbcluster;
select count(*) from t2;
count(*)
0
select count(*) from t3;
count(*)
0
select count(*) from t4;
count(*)
0
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
select count(*) from t2;
count(*)
0
select count(*) from t3;
count(*)
0
select count(*) from t4;
count(*)
0
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
select count(*) from t2;
count(*)
0
select count(*) from t3;
count(*)
0
select count(*) from t4;
count(*)
0
select count(*) from t2;
count(*)
100
select count(*) from t3;
count(*)
100
select count(*) from t4;
count(*)
100
begin;
begin;
drop table t2;
drop table t3;
drop table t4;
