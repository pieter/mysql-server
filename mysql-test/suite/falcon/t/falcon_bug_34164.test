--disable_abort_on_error
--source include/have_falcon.inc

SET storage_engine = Falcon;
#
# Bug #34164: Serializable Transaction asserts
#
--echo *** Bug #34164 ***
--disable_warnings
DROP DATABASE IF EXISTS test2;
--enable_warnings

SET GLOBAL FALCON_CONSISTENT_READ=OFF;
CREATE DATABASE test2;
USE test2;
CREATE TABLE t1 (a int primary key, b int) engine=falcon;

--echo # Establish connection conn1 (user = root)
connect (conn1,localhost,root,,);
connection conn1;
USE test2;
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;
SHOW VARIABLES LIKE 'tx_isolation';
SHOW VARIABLES LIKE 'falcon_consistent_read';
START TRANSACTION;
SELECT * FROM t1;
INSERT INTO t1 VALUES (1,1);
connection default;
--send UPDATE t1 SET b = 11 WHERE a = 1
connection conn1;
COMMIT;
connection default;
--reap
SELECT * FROM t1;


connection conn1;
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
SHOW VARIABLES LIKE 'tx_isolation';
SHOW VARIABLES LIKE 'falcon_consistent_read';
START TRANSACTION;
SELECT * FROM t1;
INSERT INTO t1 VALUES (2,2);
connection default;
--send UPDATE t1 SET b = 22 WHERE a = 2
connection conn1;
COMMIT;
connection default;
--reap
SELECT * FROM t1;


SET GLOBAL FALCON_CONSISTENT_READ=ON;
--echo # Establish connection conn2 (user = root)
connect (conn2,localhost,root,,);
connection conn2;
USE test2;
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;
SHOW VARIABLES LIKE 'tx_isolation';
SHOW VARIABLES LIKE 'falcon_consistent_read';
START TRANSACTION;
SELECT * FROM t1;
INSERT INTO t1 VALUES (3,3);
connection default;
UPDATE t1 SET b = 33 WHERE a = 3;
connection conn2;
COMMIT;
SELECT * FROM t1;

connection conn2;
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
SHOW VARIABLES LIKE 'tx_isolation';
SHOW VARIABLES LIKE 'falcon_consistent_read';
START TRANSACTION;
SELECT * FROM t1;
INSERT INTO t1 VALUES (4,4);
connection default;
UPDATE t1 SET b = 44 WHERE a = 4;
connection conn2;
COMMIT;
SELECT * FROM t1;


# Final cleanup
connection default;
disconnect conn1;
disconnect conn2;
DROP DATABASE test2;
USE test;
